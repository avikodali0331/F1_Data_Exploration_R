races_2021 <- races %>%
filter(year == 2021)
driver_standings_2021 <- driver_standings_raw %>%
inner_join(races_2021, by = "raceId") %>%
select(driverStandingsId, raceName, raceDate, year, round, driverId, points, position, positionText, wins, circuitId) %>%
left_join(drivers, by = "driverId") %>%
select(driverStandingsId, raceName, raceDate, year, round, driverName, driverCode, points, position, positionText, wins,
circuitId) %>%
left_join(circuits, by = "circuitId") %>%
select(circuitLocation, circuitCountry, circuitName, raceName, raceDate, year, round, driverName, driverCode, points, position,
positionText, wins) %>%
rename(city = circuitLocation, country = circuitCountry) %>%
arrange(round, position)
kable(driver_standings_2021 %>% head())
constructor_standings_raw <- read.csv(here("data", "constructor_standings.csv"))
constructor_standings_2021 <- constructor_standings_raw %>%
inner_join(races_2021, by = "raceId") %>%
select(constructorStandingsId, raceName, raceDate, year, round, constructorId, points, position, positionText, wins, circuitId) %>%
left_join(constructors, by = "constructorId") %>%
select(constructorStandingsId, raceName, raceDate, year, round, constructorName, points, position, positionText, wins,
circuitId) %>%
left_join(circuits, by = "circuitId") %>%
select(circuitLocation, circuitCountry, circuitName, raceName, raceDate, year, round, constructorName, points, position,
positionText, wins) %>%
rename(city = circuitLocation, country = circuitCountry) %>%
arrange(round, position)
kable(constructor_standings_2021 %>% head())
drivers_2021_colors <- c('HAM' = '#6CD3BF',
'BOT' = '#6CD3BF',
'VER' = '#1E5BC6',
'PER' = '#1E5BC6',
'LEC' = '#ED1C24',
'SAI' = '#ED1C24',
'RUS' = '#37BEDD',
'LAT' = '#37BEDD',
'NOR' = '#F58020',
'RIC' = '#F58020',
'MSC' = '#B6BABD',
'MAZ' = '#B6BABD',
'VET' = '#2D826D',
'STR' = '#2D826D',
'RAI' = '#B12039',
'GIO' = '#B12039',
'KUB' = '#B12039',
'GAS' = '#4E7C9B',
'TSU' = '#4E7C9B',
'ALO' = '#2293D1',
'OCO' = '#2293D1')
drivers_2021_lines <- c('HAM' = 'solid',
'BOT' = 'twodash',
'VER' = 'solid',
'PER' = 'twodash',
'LEC' = 'solid',
'SAI' = 'twodash',
'RUS' = 'solid',
'LAT' = 'twodash',
'NOR' = 'solid',
'RIC' = 'twodash',
'MSC' = 'solid',
'MAZ' = 'twodash',
'VET' = 'solid',
'STR' = 'twodash',
'RAI' = 'solid',
'GIO' = 'twodash',
'KUB' = 'dotted',
'GAS' = 'solid',
'TSU' = 'twodash',
'ALO' = 'solid',
'OCO' = 'twodash')
constructors_2021_colors <- c('Mercedes' = '#6CD3BF',
'Red Bull' = '#1E5BC6',
'Ferrari' = '#ED1C24',
'Williams' = '#37BEDD',
'McLaren' = '#F58020',
'Haas F1 Team' = '#B6BABD',
'Aston Martin' = '#2D826D',
'Alfa Romeo' = '#B12039',
'AlphaTauri' = '#4E7C9B',
'Alpine F1 Team' = '#2293D1')
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
constructor_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = constructorName, group = constructorName)) +
geom_line() +
scale_color_manual(values = constructors_2021_colors) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Constructor's World Championship",
y = "Points",
color = "Constructor")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 45, vjust = 0.5),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 45, vjust = 1),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 45, vjust = 0.5),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 45, hjust = 0.5, vjust = 0.5),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 45, hjust = -0.5, vjust = 0.5),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
driver_standings_raw <- read.csv(here("data", "driver_standings.csv"))
races_2021 <- races %>%
filter(year == 2021)
driver_standings_2021 <- driver_standings_raw %>%
inner_join(races_2021, by = "raceId") %>%
select(driverStandingsId, raceName, raceDate, year, round, driverId, points, position, positionText, wins, circuitId) %>%
left_join(drivers, by = "driverId") %>%
select(driverStandingsId, raceName, raceDate, year, round, driverName, driverCode, points, position, positionText, wins,
circuitId) %>%
left_join(circuits, by = "circuitId") %>%
select(circuitLocation, circuitCountry, circuitName, raceName, raceDate, year, round, driverName, driverCode, points, position,
wins) %>%
rename(city = circuitLocation, country = circuitCountry) %>%
arrange(round, position)
kable(driver_standings_2021 %>% head())
constructor_standings_raw <- read.csv(here("data", "constructor_standings.csv"))
constructor_standings_2021 <- constructor_standings_raw %>%
inner_join(races_2021, by = "raceId") %>%
select(constructorStandingsId, raceName, raceDate, year, round, constructorId, points, position, positionText, wins, circuitId) %>%
left_join(constructors, by = "constructorId") %>%
select(constructorStandingsId, raceName, raceDate, year, round, constructorName, points, position, positionText, wins,
circuitId) %>%
left_join(circuits, by = "circuitId") %>%
select(circuitLocation, circuitCountry, circuitName, raceName, raceDate, year, round, constructorName, points, position,
wins) %>%
rename(city = circuitLocation, country = circuitCountry) %>%
arrange(round, position)
kable(constructor_standings_2021 %>% head())
devtools::install_github("MaelKubli/RTwitterV2")
library(RTwitterV2)
devtools::install_github("MaelKubli/RTwitterV2")
library(RTwitterV2)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(rvest)
library(jsonlite)
library(janitor)
library(lubridate)
library(here)
library(knitr)
library(twitteR)
library(ROAuth)
library(tidytext)
library(rtweet)
pitstops_raw <- read.csv(here("data", "pit_stops.csv"))
results_raw <- read.csv(here("data", "results.csv"))
races_raw <- read.csv(here("data", "races.csv"))
drivers_raw <- read.csv(here("data", "drivers.csv"))
constructors_raw <- read.csv(here("data", "constructors.csv"))
circuits_raw <- read.csv(here("data", "circuits.csv"))
per_race_ids <- results_raw %>%
select(raceId, driverId, constructorId)
races <- races_raw %>%
select(raceId, circuitId, year, round, name, date, time) %>%
rename(raceName = name, raceDate = date, raceTime = time) %>%
mutate(raceDate = ymd(raceDate), raceDateTime = ymd_hms(str_c(raceDate, raceTime)))
drivers <- drivers_raw %>%
mutate(driverName = paste(forename, surname), dob = ymd(dob)) %>%
select(driverId, driverName, driverRef, code, dob, nationality) %>%
rename(driverNationality = nationality, driverCode = code)
constructors <- constructors_raw %>%
select(constructorId, constructorRef, name, nationality) %>%
rename(constructorNationality = nationality, constructorName = name)
circuits <- circuits_raw %>%
select(circuitId, name, location, country, alt) %>%
rename(circuitName = name, circuitLocation = location, circuitCountry = country, circuitAltitude = alt) %>%
mutate(circuitAltitude = as.numeric(circuitAltitude))
pitstops <- pitstops_raw %>%
left_join(per_race_ids, by = c("raceId", "driverId")) %>%
left_join(races, by = "raceId") %>%
left_join(circuits, by = "circuitId") %>%
left_join(drivers, by = "driverId") %>%
left_join(constructors, by = "constructorId") %>%
mutate(dateTime = ymd_hms(str_c(as.character(raceDate), time)), seconds = milliseconds / 1000) %>%
select(raceName, raceDate, circuitName, circuitAltitude, dateTime, year, round, driverName, driverCode, constructorName, stop, lap, duration, milliseconds, seconds)
kable(pitstops %>% head())
write.csv(pitstops, file = "pitstops_full.csv")
kable(pitstops %>%
group_by(constructorName) %>%
summarise(avgPitStopTime = mean(seconds), numberOfRaces = n()) %>%
arrange(avgPitStopTime) %>%
head(10))
kable(pitstops %>%
filter(seconds <= 60) %>%
group_by(constructorName) %>%
summarise(avgPitStopTime = mean(seconds), numberOfRaces = n()) %>%
arrange(avgPitStopTime) %>%
head(10))
constructor_colors <-  c('Toro Rosso' = '#0000FF',
'Mercedes' = '#6CD3BF',
'Red Bull' = '#1E5BC6',
'Ferrari' = '#ED1C24',
'Williams' = '#37BEDD',
'Force India' = '#FF80C7',
'Virgin' = '#c82e37',
'Renault' = '#FFD800',
'McLaren' = '#F58020',
'Sauber' = '#006EFF',
'Lotus' = '#FFB800',
'HRT' = '#b2945e',
'Caterham' = '#0b361f',
'Lotus F1' = '#FFB800',
'Marussia' = '#6E0000',
'Manor Marussia' = '#6E0000',
'Haas F1 Team' = '#B6BABD',
'Racing Point' = '#F596C8',
'Aston Martin' = '#2D826D',
'Alfa Romeo' = '#B12039',
'AlphaTauri' = '#4E7C9B',
'Alpine F1 Team' = '#2293D1')
pitstops %>%
filter(seconds <= 60) %>%
group_by(constructorName, year) %>%
summarise(avgPitStopTime = mean(seconds)) %>%
mutate(year = ymd(year, truncated = 2L)) %>%
ggplot(aes(x =  year, y = avgPitStopTime, color = constructorName)) +
geom_point() +
geom_line() +
scale_color_manual(values = constructor_colors) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Pit Stop Time from 2011 to 2022",
x = "Year",
y = "Average Pit Stop Time(seconds)",
color = "Constructor")
pitstops %>%
filter(seconds <= 60) %>%
group_by(year) %>%
summarise(avgPitStopTime = mean(seconds)) %>%
mutate(year = ymd(year, truncated = 2L)) %>%
ggplot(aes(x = year, y = avgPitStopTime)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = FALSE) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Pit Stop Time from 2011 to 2022",
x = "Year",
y = "Average Pit Stop Time(seconds)")
pitstops %>%
filter(seconds <= 60) %>%
ggplot(aes(x = reorder(constructorName, seconds, FUN = mean), y = seconds, fill = constructorName)) +
geom_boxplot() +
scale_fill_manual(values = constructor_colors) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
legend.position = "none",
plot.title = element_text(hjust = 0.5)) +
labs(title = "Distribution of Pit Stop Times By Constructor",
x = "Constructor",
y = "Pit Stop Time(seconds)"
)
pitstops %>%
filter(seconds <= 60) %>%
group_by(circuitName) %>%
summarise(avgPitStopTime = mean(seconds)) %>%
ggplot(aes(x = reorder(circuitName, avgPitStopTime), y = avgPitStopTime)) +
geom_point(color = "red") +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Pit Stop Time by Circuit",
x = "Circuit",
y = "Average Pit Stop TIme(seconds)")
pitstops %>%
filter(seconds <= 60, !is.na(circuitAltitude)) %>%
group_by(circuitAltitude) %>%
summarise(avgPitStopTime = mean(seconds)) %>%
ggplot(aes(x = circuitAltitude, y = avgPitStopTime)) +
geom_point(color = "blue") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Pit Stop Time vs Altitude",
x = "Altitude",
y = "Average Pit Stop TIme(seconds)")
driver_standings_raw <- read.csv(here("data", "driver_standings.csv"))
races_2021 <- races %>%
filter(year == 2021)
driver_standings_2021 <- driver_standings_raw %>%
inner_join(races_2021, by = "raceId") %>%
select(driverStandingsId, raceName, raceDate, year, round, driverId, points, position, positionText, wins, circuitId) %>%
left_join(drivers, by = "driverId") %>%
select(driverStandingsId, raceName, raceDate, year, round, driverName, driverCode, points, position, positionText, wins,
circuitId) %>%
left_join(circuits, by = "circuitId") %>%
select(circuitLocation, circuitCountry, circuitName, raceName, raceDate, year, round, driverName, driverCode, points, position,
wins) %>%
rename(city = circuitLocation, country = circuitCountry) %>%
arrange(round, position)
kable(driver_standings_2021 %>% head())
constructor_standings_raw <- read.csv(here("data", "constructor_standings.csv"))
constructor_standings_2021 <- constructor_standings_raw %>%
inner_join(races_2021, by = "raceId") %>%
select(constructorStandingsId, raceName, raceDate, year, round, constructorId, points, position, positionText, wins, circuitId) %>%
left_join(constructors, by = "constructorId") %>%
select(constructorStandingsId, raceName, raceDate, year, round, constructorName, points, position, positionText, wins,
circuitId) %>%
left_join(circuits, by = "circuitId") %>%
select(circuitLocation, circuitCountry, circuitName, raceName, raceDate, year, round, constructorName, points, position,
wins) %>%
rename(city = circuitLocation, country = circuitCountry) %>%
arrange(round, position)
kable(constructor_standings_2021 %>% head())
drivers_2021_colors <- c('HAM' = '#6CD3BF',
'BOT' = '#6CD3BF',
'VER' = '#1E5BC6',
'PER' = '#1E5BC6',
'LEC' = '#ED1C24',
'SAI' = '#ED1C24',
'RUS' = '#37BEDD',
'LAT' = '#37BEDD',
'NOR' = '#F58020',
'RIC' = '#F58020',
'MSC' = '#B6BABD',
'MAZ' = '#B6BABD',
'VET' = '#2D826D',
'STR' = '#2D826D',
'RAI' = '#B12039',
'GIO' = '#B12039',
'KUB' = '#B12039',
'GAS' = '#4E7C9B',
'TSU' = '#4E7C9B',
'ALO' = '#2293D1',
'OCO' = '#2293D1')
drivers_2021_lines <- c('HAM' = 'solid',
'BOT' = 'twodash',
'VER' = 'solid',
'PER' = 'twodash',
'LEC' = 'solid',
'SAI' = 'twodash',
'RUS' = 'solid',
'LAT' = 'twodash',
'NOR' = 'solid',
'RIC' = 'twodash',
'MSC' = 'solid',
'MAZ' = 'twodash',
'VET' = 'solid',
'STR' = 'twodash',
'RAI' = 'solid',
'GIO' = 'twodash',
'KUB' = 'dotted',
'GAS' = 'solid',
'TSU' = 'twodash',
'ALO' = 'solid',
'OCO' = 'twodash')
constructors_2021_colors <- c('Mercedes' = '#6CD3BF',
'Red Bull' = '#1E5BC6',
'Ferrari' = '#ED1C24',
'Williams' = '#37BEDD',
'McLaren' = '#F58020',
'Haas F1 Team' = '#B6BABD',
'Aston Martin' = '#2D826D',
'Alfa Romeo' = '#B12039',
'AlphaTauri' = '#4E7C9B',
'Alpine F1 Team' = '#2293D1')
driver_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = driverCode, linetype = driverCode, group = driverCode)) +
geom_line() +
scale_color_manual(values = drivers_2021_colors) +
scale_linetype_manual(values = drivers_2021_lines) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Driver's World Championship",
y = "Points",
color = "Driver",
linetype = "Driver")
constructor_standings_2021 %>%
ggplot(aes(x = fct_reorder(raceName, raceDate), y = points, color = constructorName, group = constructorName)) +
geom_line() +
scale_color_manual(values = constructors_2021_colors) +
theme_bw() +
theme(axis.text.x.bottom = element_text(angle = 90),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.text = element_text(size = 8)) +
labs(title = "2021 F1 Constructor's World Championship",
y = "Points",
color = "Constructor")
source(api_creds.R)
source(here("data", "api_creds.R"))
source(here("data", "api_creds.R"))
source(here("data", "api_creds.R"))
source(here("api_creds.R"))
api_key <- api_key
api_secret <- api_key_secret
access_token <- access_token
access_token_secret <- access_token_secret
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
source(here("api_creds.R"))
api_key <- api_key
api_secret <- api_key_secret
access_token <- access_token
access_token_secret <- access_token_secret
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
source(here("api_creds.R"))
api_key <- api_key
api_secret <- api_key_secret
access_token <- access_token
access_token_secret <- access_token_secret
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
source(here("api_creds.R"))
api_key <- api_key
api_secret <- api_key_secret
access_token <- access_token
access_token_secret <- access_token_secret
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
